#ifndef HM_INPUT_H
#define HM_INPUT_H

typedef enum {
    HM_Key_UNKNOWN = SDL_SCANCODE_UNKNOWN,

    HM_Key_A = SDL_SCANCODE_A,
    HM_Key_B = SDL_SCANCODE_B,
    HM_Key_C = SDL_SCANCODE_C,
    HM_Key_D = SDL_SCANCODE_D,
    HM_Key_E = SDL_SCANCODE_E,
    HM_Key_F = SDL_SCANCODE_F,
    HM_Key_G = SDL_SCANCODE_G,
    HM_Key_H = SDL_SCANCODE_H,
    HM_Key_I = SDL_SCANCODE_I,
    HM_Key_J = SDL_SCANCODE_J,
    HM_Key_K = SDL_SCANCODE_K,
    HM_Key_L = SDL_SCANCODE_L,
    HM_Key_M = SDL_SCANCODE_M,
    HM_Key_N = SDL_SCANCODE_N,
    HM_Key_O = SDL_SCANCODE_O,
    HM_Key_P = SDL_SCANCODE_P,
    HM_Key_Q = SDL_SCANCODE_Q,
    HM_Key_R = SDL_SCANCODE_R,
    HM_Key_S = SDL_SCANCODE_S,
    HM_Key_T = SDL_SCANCODE_T,
    HM_Key_U = SDL_SCANCODE_U,
    HM_Key_V = SDL_SCANCODE_V,
    HM_Key_W = SDL_SCANCODE_W,
    HM_Key_X = SDL_SCANCODE_X,
    HM_Key_Y = SDL_SCANCODE_Y,
    HM_Key_Z = SDL_SCANCODE_Z,

    HM_Key_1 = SDL_SCANCODE_1,
    HM_Key_2 = SDL_SCANCODE_2,
    HM_Key_3 = SDL_SCANCODE_3,
    HM_Key_4 = SDL_SCANCODE_4,
    HM_Key_5 = SDL_SCANCODE_5,
    HM_Key_6 = SDL_SCANCODE_6,
    HM_Key_7 = SDL_SCANCODE_7,
    HM_Key_8 = SDL_SCANCODE_8,
    HM_Key_9 = SDL_SCANCODE_9,
    HM_Key_0 = SDL_SCANCODE_0,

    HM_Key_RETURN = SDL_SCANCODE_RETURN,
    HM_Key_ESCAPE = SDL_SCANCODE_ESCAPE,
    HM_Key_BACKSPACE = SDL_SCANCODE_BACKSPACE,
    HM_Key_TAB = SDL_SCANCODE_TAB,
    HM_Key_SPACE = SDL_SCANCODE_SPACE,

    HM_Key_MINUS = SDL_SCANCODE_MINUS,
    HM_Key_EQUALS = SDL_SCANCODE_EQUALS,
    HM_Key_LEFTBRACKET = SDL_SCANCODE_LEFTBRACKET,
    HM_Key_RIGHTBRACKET = SDL_SCANCODE_RIGHTBRACKET,
    HM_Key_BACKSLASH = SDL_SCANCODE_BACKSLASH,
    HM_Key_NONUSHASH = SDL_SCANCODE_NONUSHASH,
    HM_Key_SEMICOLON = SDL_SCANCODE_SEMICOLON,
    HM_Key_APOSTROPHE = SDL_SCANCODE_APOSTROPHE,
    HM_Key_GRAVE = SDL_SCANCODE_GRAVE,
    HM_Key_COMMA = SDL_SCANCODE_COMMA,
    HM_Key_PERIOD = SDL_SCANCODE_PERIOD,
    HM_Key_SLASH = SDL_SCANCODE_SLASH,

    HM_Key_CAPSLOCK = SDL_SCANCODE_CAPSLOCK,

    HM_Key_F1 = SDL_SCANCODE_F1,
    HM_Key_F2 = SDL_SCANCODE_F2,
    HM_Key_F3 = SDL_SCANCODE_F3,
    HM_Key_F4 = SDL_SCANCODE_F4,
    HM_Key_F5 = SDL_SCANCODE_F5,
    HM_Key_F6 = SDL_SCANCODE_F6,
    HM_Key_F7 = SDL_SCANCODE_F7,
    HM_Key_F8 = SDL_SCANCODE_F8,
    HM_Key_F9 = SDL_SCANCODE_F9,
    HM_Key_F10 = SDL_SCANCODE_F10,
    HM_Key_F11 = SDL_SCANCODE_F11,
    HM_Key_F12 = SDL_SCANCODE_F12,

    HM_Key_PRINTSCREEN = SDL_SCANCODE_PRINTSCREEN,
    HM_Key_SCROLLLOCK = SDL_SCANCODE_SCROLLLOCK,
    HM_Key_PAUSE = SDL_SCANCODE_PAUSE,
    HM_Key_INSERT = SDL_SCANCODE_INSERT,
    HM_Key_HOME = SDL_SCANCODE_HOME,
    HM_Key_PAGEUP = SDL_SCANCODE_PAGEUP,
    HM_Key_DELETE = SDL_SCANCODE_DELETE,
    HM_Key_END = SDL_SCANCODE_END,
    HM_Key_PAGEDOWN = SDL_SCANCODE_PAGEDOWN,
    HM_Key_RIGHT = SDL_SCANCODE_RIGHT,
    HM_Key_LEFT = SDL_SCANCODE_LEFT,
    HM_Key_DOWN = SDL_SCANCODE_DOWN,
    HM_Key_UP = SDL_SCANCODE_UP,

    HM_Key_NUMLOCKCLEAR = SDL_SCANCODE_NUMLOCKCLEAR,

    HM_Key_KP_DIVIDE = SDL_SCANCODE_KP_DIVIDE,
    HM_Key_KP_MULTIPLY = SDL_SCANCODE_KP_MULTIPLY,
    HM_Key_KP_MINUS = SDL_SCANCODE_KP_MINUS,
    HM_Key_KP_PLUS = SDL_SCANCODE_KP_PLUS,
    HM_Key_KP_ENTER = SDL_SCANCODE_KP_ENTER,
    HM_Key_KP_1 = SDL_SCANCODE_KP_1,
    HM_Key_KP_2 = SDL_SCANCODE_KP_2,
    HM_Key_KP_3 = SDL_SCANCODE_KP_3,
    HM_Key_KP_4 = SDL_SCANCODE_KP_4,
    HM_Key_KP_5 = SDL_SCANCODE_KP_5,
    HM_Key_KP_6 = SDL_SCANCODE_KP_6,
    HM_Key_KP_7 = SDL_SCANCODE_KP_7,
    HM_Key_KP_8 = SDL_SCANCODE_KP_8,
    HM_Key_KP_9 = SDL_SCANCODE_KP_9,
    HM_Key_KP_0 = SDL_SCANCODE_KP_0,
    HM_Key_KP_PERIOD = SDL_SCANCODE_KP_PERIOD,

    HM_Key_NONUSBACKSLASH = SDL_SCANCODE_NONUSBACKSLASH,
    HM_Key_APPLICATION = SDL_SCANCODE_APPLICATION,
    HM_Key_POWER = SDL_SCANCODE_POWER,
    HM_Key_KP_EQUALS = SDL_SCANCODE_KP_EQUALS,
    HM_Key_F13 = SDL_SCANCODE_F13,
    HM_Key_F14 = SDL_SCANCODE_F14,
    HM_Key_F15 = SDL_SCANCODE_F15,
    HM_Key_F16 = SDL_SCANCODE_F16,
    HM_Key_F17 = SDL_SCANCODE_F17,
    HM_Key_F18 = SDL_SCANCODE_F18,
    HM_Key_F19 = SDL_SCANCODE_F19,
    HM_Key_F20 = SDL_SCANCODE_F20,
    HM_Key_F21 = SDL_SCANCODE_F21,
    HM_Key_F22 = SDL_SCANCODE_F22,
    HM_Key_F23 = SDL_SCANCODE_F23,
    HM_Key_F24 = SDL_SCANCODE_F24,
    HM_Key_EXECUTE = SDL_SCANCODE_EXECUTE,
    HM_Key_HELP = SDL_SCANCODE_HELP,
    HM_Key_MENU = SDL_SCANCODE_MENU,
    HM_Key_SELECT = SDL_SCANCODE_SELECT,
    HM_Key_STOP = SDL_SCANCODE_STOP,
    HM_Key_AGAIN = SDL_SCANCODE_AGAIN,
    HM_Key_UNDO = SDL_SCANCODE_UNDO,
    HM_Key_CUT = SDL_SCANCODE_CUT,
    HM_Key_COPY = SDL_SCANCODE_COPY,
    HM_Key_PASTE = SDL_SCANCODE_PASTE,
    HM_Key_FIND = SDL_SCANCODE_FIND,
    HM_Key_MUTE = SDL_SCANCODE_MUTE,
    HM_Key_VOLUMEUP = SDL_SCANCODE_VOLUMEUP,
    HM_Key_VOLUMEDOWN = SDL_SCANCODE_VOLUMEDOWN,
    HM_Key_KP_COMMA = SDL_SCANCODE_KP_COMMA,
    HM_Key_KP_EQUALSAS400 = SDL_SCANCODE_KP_EQUALSAS400,

    HM_Key_INTERNATIONAL1 = SDL_SCANCODE_INTERNATIONAL1,
    HM_Key_INTERNATIONAL2 = SDL_SCANCODE_INTERNATIONAL2,
    HM_Key_INTERNATIONAL3 = SDL_SCANCODE_INTERNATIONAL3,
    HM_Key_INTERNATIONAL4 = SDL_SCANCODE_INTERNATIONAL4,
    HM_Key_INTERNATIONAL5 = SDL_SCANCODE_INTERNATIONAL5,
    HM_Key_INTERNATIONAL6 = SDL_SCANCODE_INTERNATIONAL6,
    HM_Key_INTERNATIONAL7 = SDL_SCANCODE_INTERNATIONAL7,
    HM_Key_INTERNATIONAL8 = SDL_SCANCODE_INTERNATIONAL8,
    HM_Key_INTERNATIONAL9 = SDL_SCANCODE_INTERNATIONAL9,
    HM_Key_LANG1 = SDL_SCANCODE_LANG1,
    HM_Key_LANG2 = SDL_SCANCODE_LANG2,
    HM_Key_LANG3 = SDL_SCANCODE_LANG3,
    HM_Key_LANG4 = SDL_SCANCODE_LANG4,
    HM_Key_LANG5 = SDL_SCANCODE_LANG5,
    HM_Key_LANG6 = SDL_SCANCODE_LANG6,
    HM_Key_LANG7 = SDL_SCANCODE_LANG7,
    HM_Key_LANG8 = SDL_SCANCODE_LANG8,
    HM_Key_LANG9 = SDL_SCANCODE_LANG9,

    HM_Key_ALTERASE = SDL_SCANCODE_ALTERASE,
    HM_Key_SYSREQ = SDL_SCANCODE_SYSREQ,
    HM_Key_CANCEL = SDL_SCANCODE_CANCEL,
    HM_Key_CLEAR = SDL_SCANCODE_CLEAR,
    HM_Key_PRIOR = SDL_SCANCODE_PRIOR,
    HM_Key_RETURN2 = SDL_SCANCODE_RETURN2,
    HM_Key_SEPARATOR = SDL_SCANCODE_SEPARATOR,
    HM_Key_OUT = SDL_SCANCODE_OUT,
    HM_Key_OPER = SDL_SCANCODE_OPER,
    HM_Key_CLEARAGAIN = SDL_SCANCODE_CLEARAGAIN,
    HM_Key_CRSEL = SDL_SCANCODE_CRSEL,
    HM_Key_EXSEL = SDL_SCANCODE_EXSEL,

    HM_Key_KP_00 = SDL_SCANCODE_KP_00,
    HM_Key_KP_000 = SDL_SCANCODE_KP_000,
    HM_Key_THOUSANDSSEPARATOR = SDL_SCANCODE_THOUSANDSSEPARATOR,
    HM_Key_DECIMALSEPARATOR = SDL_SCANCODE_DECIMALSEPARATOR,
    HM_Key_CURRENCYUNIT = SDL_SCANCODE_CURRENCYUNIT,
    HM_Key_CURRENCYSUBUNIT = SDL_SCANCODE_CURRENCYSUBUNIT,
    HM_Key_KP_LEFTPAREN = SDL_SCANCODE_KP_LEFTPAREN,
    HM_Key_KP_RIGHTPAREN = SDL_SCANCODE_KP_RIGHTPAREN,
    HM_Key_KP_LEFTBRACE = SDL_SCANCODE_KP_LEFTBRACE,
    HM_Key_KP_RIGHTBRACE = SDL_SCANCODE_KP_RIGHTBRACE,
    HM_Key_KP_TAB = SDL_SCANCODE_KP_TAB,
    HM_Key_KP_BACKSPACE = SDL_SCANCODE_KP_BACKSPACE,
    HM_Key_KP_A = SDL_SCANCODE_KP_A,
    HM_Key_KP_B = SDL_SCANCODE_KP_B,
    HM_Key_KP_C = SDL_SCANCODE_KP_C,
    HM_Key_KP_D = SDL_SCANCODE_KP_D,
    HM_Key_KP_E = SDL_SCANCODE_KP_E,
    HM_Key_KP_F = SDL_SCANCODE_KP_F,
    HM_Key_KP_XOR = SDL_SCANCODE_KP_XOR,
    HM_Key_KP_POWER = SDL_SCANCODE_KP_POWER,
    HM_Key_KP_PERCENT = SDL_SCANCODE_KP_PERCENT,
    HM_Key_KP_LESS = SDL_SCANCODE_KP_LESS,
    HM_Key_KP_GREATER = SDL_SCANCODE_KP_GREATER,
    HM_Key_KP_AMPERSAND = SDL_SCANCODE_KP_AMPERSAND,
    HM_Key_KP_DBLAMPERSAND = SDL_SCANCODE_KP_DBLAMPERSAND,
    HM_Key_KP_VERTICALBAR = SDL_SCANCODE_KP_VERTICALBAR,
    HM_Key_KP_DBLVERTICALBAR = SDL_SCANCODE_KP_DBLVERTICALBAR,
    HM_Key_KP_COLON = SDL_SCANCODE_KP_COLON,
    HM_Key_KP_HASH = SDL_SCANCODE_KP_HASH,
    HM_Key_KP_SPACE = SDL_SCANCODE_KP_SPACE,
    HM_Key_KP_AT = SDL_SCANCODE_KP_AT,
    HM_Key_KP_EXCLAM = SDL_SCANCODE_KP_EXCLAM,
    HM_Key_KP_MEMSTORE = SDL_SCANCODE_KP_MEMSTORE,
    HM_Key_KP_MEMRECALL = SDL_SCANCODE_KP_MEMRECALL,
    HM_Key_KP_MEMCLEAR = SDL_SCANCODE_KP_MEMCLEAR,
    HM_Key_KP_MEMADD = SDL_SCANCODE_KP_MEMADD,
    HM_Key_KP_MEMSUBTRACT = SDL_SCANCODE_KP_MEMSUBTRACT,
    HM_Key_KP_MEMMULTIPLY = SDL_SCANCODE_KP_MEMMULTIPLY,
    HM_Key_KP_MEMDIVIDE = SDL_SCANCODE_KP_MEMDIVIDE,
    HM_Key_KP_PLUSMINUS = SDL_SCANCODE_KP_PLUSMINUS,
    HM_Key_KP_CLEAR = SDL_SCANCODE_KP_CLEAR,
    HM_Key_KP_CLEARENTRY = SDL_SCANCODE_KP_CLEARENTRY,
    HM_Key_KP_BINARY = SDL_SCANCODE_KP_BINARY,
    HM_Key_KP_OCTAL = SDL_SCANCODE_KP_OCTAL,
    HM_Key_KP_DECIMAL = SDL_SCANCODE_KP_DECIMAL,
    HM_Key_KP_HEXADECIMAL = SDL_SCANCODE_KP_HEXADECIMAL,

    HM_Key_LCTRL = SDL_SCANCODE_LCTRL,
    HM_Key_LSHIFT = SDL_SCANCODE_LSHIFT,
    HM_Key_LALT = SDL_SCANCODE_LALT,
    HM_Key_LGUI = SDL_SCANCODE_LGUI,
    HM_Key_RCTRL = SDL_SCANCODE_RCTRL,
    HM_Key_RSHIFT = SDL_SCANCODE_RSHIFT,
    HM_Key_RALT = SDL_SCANCODE_RALT,
    HM_Key_RGUI = SDL_SCANCODE_RGUI,

    HM_Key_MODE = SDL_SCANCODE_MODE,

    HM_Key_AUDIONEXT = SDL_SCANCODE_AUDIONEXT,
    HM_Key_AUDIOPREV = SDL_SCANCODE_AUDIOPREV,
    HM_Key_AUDIOSTOP = SDL_SCANCODE_AUDIOSTOP,
    HM_Key_AUDIOPLAY = SDL_SCANCODE_AUDIOPLAY,
    HM_Key_AUDIOMUTE = SDL_SCANCODE_AUDIOMUTE,
    HM_Key_MEDIASELECT = SDL_SCANCODE_MEDIASELECT,
    HM_Key_WWW = SDL_SCANCODE_WWW,
    HM_Key_MAIL = SDL_SCANCODE_MAIL,
    HM_Key_CALCULATOR = SDL_SCANCODE_CALCULATOR,
    HM_Key_COMPUTER = SDL_SCANCODE_COMPUTER,
    HM_Key_AC_SEARCH = SDL_SCANCODE_AC_SEARCH,
    HM_Key_AC_HOME = SDL_SCANCODE_AC_HOME,
    HM_Key_AC_BACK = SDL_SCANCODE_AC_BACK,
    HM_Key_AC_FORWARD = SDL_SCANCODE_AC_FORWARD,
    HM_Key_AC_STOP = SDL_SCANCODE_AC_STOP,
    HM_Key_AC_REFRESH = SDL_SCANCODE_AC_REFRESH,
    HM_Key_AC_BOOKMARKS = SDL_SCANCODE_AC_BOOKMARKS,
    HM_Key_BRIGHTNESSDOWN = SDL_SCANCODE_BRIGHTNESSDOWN,
    HM_Key_BRIGHTNESSUP = SDL_SCANCODE_BRIGHTNESSUP,
    HM_Key_DISPLAYSWITCH = SDL_SCANCODE_DISPLAYSWITCH,
    HM_Key_KBDILLUMTOGGLE = SDL_SCANCODE_KBDILLUMTOGGLE,
    HM_Key_KBDILLUMDOWN = SDL_SCANCODE_KBDILLUMDOWN,
    HM_Key_KBDILLUMUP = SDL_SCANCODE_KBDILLUMUP,
    HM_Key_EJECT = SDL_SCANCODE_EJECT,
    HM_Key_SLEEP = SDL_SCANCODE_SLEEP,

    HM_Key_APP1 = SDL_SCANCODE_APP1,
    HM_Key_APP2 = SDL_SCANCODE_APP2,

    HM_Key_MaxKeyCount = SDL_NUM_SCANCODES // 512
} HM_Key;

typedef struct {
    bool is_down;
} HM_KeyState;

typedef struct {
    HM_KeyState keys[HM_Key_MaxKeyCount];
} HM_Keyboard;

typedef struct {
    i32 x;
    i32 y;
    HM_KeyState left;
    HM_KeyState middle;
    HM_KeyState right;
} HM_Mouse;

typedef struct {
    f32 dt;
    HM_Keyboard keyboard;
    HM_Mouse mouse;
} HM_Input;

#endif
